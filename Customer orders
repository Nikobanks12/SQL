-- Here I am querying a database with multiple tables--


--How many orders were placed in January? 
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';


--How many of those orders were for an iPhone?--
SELECT COUNT (orderid)
FROM BIT_DB.JanSales
WHERE Product = "iPhone"
AND length(orderid) = 6 ;

--Select the customer account numbers for all the orders that were placed in February.--
SELECT distinct acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=FEB.orderid
WHERE length(orderid) = 6;


--Which product was the cheapest one sold in January, and what was the price?--
SELECT distinct Product,price
FROM BIT_DB.JanSales
ORDER BY price ASC LIMIT 1;

-- Another way to query for question above.--
SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE  price in (SELECT min(price) FROM BIT_DB.JanSales);


--What is the total revenue for each product sold in January?--
SELECT sum(quantity)*price as revenue
,product
FROM BIT_DB.JanSales
GROUP BY product;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?--
SELECT SUM(Quantity),product, 
SUM(quantity)*price as revenue
FROM BIT_DB.FebSales 
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;


--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?--
SELECT count(distinct cust.acctnum), 
AVG(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6 
AND orderid <> 'Order ID';


--Listing all the products sold in Los Angeles in February including how many of each were sold.--
SELECT distinct Product,sum(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;


--Which locations in New York received at least 3 orders in January, and how many orders did they each receive?--
SELECT distinct location, count(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND length(orderid) = 6 
AND orderid <> 'Order ID'
GROUP BY location
HAVING count(orderID)>2;


--How many of each type of headphone were sold in February?--
SELECT sum(Quantity) as quantity,
Product
FROM BIT_DB.FebSales 
WHERE Product like '%Headphones%'
GROUP BY Product;


--What was the average amount spent per account in February?--
SELECT avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';


--What was the average quantity of products purchased per account in February?--
select sum(quantity)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';



--Which product brought in the most revenue in January and how much revenue did it bring in total?--
SELECT product, 
sum(quantity*price)
FROM BIT_DB.JanSales 
GROUP BY product
ORDER BY sum(quantity*price) desc 
LIMIT 1;




--Here I created anew table to insert Spodify data into.-

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )


-- What is the most popualr song?--
SELECT track_name,artist_name,popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 1;


__What is the average song duration?--


SELECT AVG(duration_ms)
FROM BIT_DB.Spotifydata
ORDER BY duration_ms;


